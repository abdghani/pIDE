var app = require('../app');
var debug = require('debug')('pyide:server');
var https = require('https');
var path = require('path');
var config = require(path.join(__dirname,'config'));
var port = normalizePort(process.env.PORT || config.port);
var fs = require('fs');
app.set('port', port);
var privateKey = fs.readFileSync( path.join(__dirname,'..','keys','server.key'));
var certificate = fs.readFileSync( path.join(__dirname,'..','keys','server.crt'));

// var server = https.createServer({
//   key: privateKey,
//   cert: certificate
// },app);

app.listen(port,function(){
    console.log("server is running at port ",port);
});
app.on('error', onError);
app.on('listening', onListening);


function normalizePort(val) {
  var port = parseInt(val, 10);
  if (isNaN(port)) {
    return val;
  }
  if (port >= 0) {
    return port;
  }
  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
